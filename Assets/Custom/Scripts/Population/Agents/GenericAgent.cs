//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.34209
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;


public class GenericAgent: MonoBehaviour
{
	//Attributes
	public enum States { Idle, Move};
	public float speed;
	public States state;
	public GameObject target;
	public string targetTag;
	public GameObject obstacle;
	public bool blockedbyobstacle = false;
	public Vector3 nextpos;
    public int healthPoints;
    public int humanityRate;
    public double cooldown;

	public void Update(){
        cooldown-- ; // TODO decrement temporally
		switch (state)
		{
		case States.Idle:
			state = States.Move;
			break;
				
		case States.Move:
			Move();
			state = States.Move;
			break;

		default:
			state = States.Idle;
			Console.Write ("Warning encountered state default in agent FSM");
			break;
		}

        LiveOrDie();
	}

	public void OnTriggerEnter(Collider other){ //TODO create object collider
        Debug.Log("targetTag : " + targetTag );
        Debug.Log("OtherTag : " + other.tag );
        if (other.gameObject.CompareTag(targetTag))
        {
            float distance = Vector3.Distance(transform.position, other.attachedRigidbody.position);
            GenericWeapon usedWeapon = Attack(distance);
            GenericAgent otherAgent = other.gameObject.GetComponent<GenericAgent>();
            Debug.Log("generic agent is" + otherAgent.name);
            if ((usedWeapon != null) && (otherAgent != null))
            {
                if (usedWeapon.Contagion > 0)
                {
                    otherAgent.humanityRate -= usedWeapon.Contagion;
                    Debug.Log("Humanity left" + otherAgent.humanityRate);
                }
                otherAgent.healthPoints -= usedWeapon.Damages;
                Debug.Log("Lifepoints left" + otherAgent.healthPoints);
            }
        }
        else
        {
            Debug.Log("I, "+ this.name +" am pacifist towards " + other.tag);
        }
	} 

    public virtual void Move()
    {
        //does nothing
    }

    public virtual GenericWeapon Attack(float distance)
    {
        //does nothing
        return null;
    }

    public virtual void LiveOrDie()
    { //does nothing    
	}
}

